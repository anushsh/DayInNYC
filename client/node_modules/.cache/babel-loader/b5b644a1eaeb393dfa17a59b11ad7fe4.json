{"ast":null,"code":"var _jsxFileName = \"/Users/anushrutshah/Documents/UPenn/Fall 2020/CIS550/Project/450-FinalProj/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      locationName: \"\",\n      genres: [],\n      movies: []\n    };\n    this.showMovies = this.showMovies.bind(this);\n    this.handleLocationNameChange = this.handleLocationNameChange.bind(this);\n  }\n\n  handleLocationNameChange(e) {\n    this.setState({\n      locationName: e.target.value\n    });\n  }\n\n  submitLocation() {} // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(genreList => {\n      if (!genreList) return; // Map each genreObj in genreList to an HTML element:\n      // A button which triggers the showMovies function for each genre.\n\n      let genreDivs = genreList.map((genreObj, i) => /*#__PURE__*/React.createElement(GenreButton, {\n        id: \"button-\" + genreObj.genre,\n        onClick: () => this.showMovies(genreObj.genre),\n        genre: genreObj.genre,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      })); // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        genres: genreDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n\n\n  showMovies(genre) {\n    // Send an HTTP request to the server.\n    fetch(`http://localhost:8081/genres/${genre}`, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(movieList => {\n      if (!movieList) return;\n      let movieDivs = movieList.map((movieObj, i) => /*#__PURE__*/React.createElement(DashboardMovieRow, {\n        title: movieObj.title,\n        rating: movieObj.rating,\n        voteCount: movieObj.vote_count,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }));\n      this.setState({\n        movies: movieDivs\n      });\n    }).catch(err => console.log(err)); // Print the error if there is one.\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Trip Planner\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a location\",\n      value: this.state.locationName,\n      onChange: this.handleLocationNameChange,\n      id: \"location-input\",\n      className: \"location-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }\n    }, \"Search\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 44\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }, \"Rating\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }\n    }, \"Vote Count\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, this.state.movies)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/anushrutshah/Documents/UPenn/Fall 2020/CIS550/Project/450-FinalProj/client/src/components/Dashboard.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","Dashboard","Component","constructor","props","state","locationName","genres","movies","showMovies","bind","handleLocationNameChange","e","setState","target","value","submitLocation","componentDidMount","fetch","method","then","res","json","genreList","genreDivs","map","genreObj","i","genre","catch","err","console","log","movieList","movieDivs","movieObj","title","rating","vote_count","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      locationName: \"\",\n      genres: [],\n      movies: []\n    }\n\n    this.showMovies = this.showMovies.bind(this);\n    this.handleLocationNameChange = this.handleLocationNameChange.bind(this);\n  }\n\n  handleLocationNameChange(e) {\n    this.setState({\n      locationName: e.target.value\n    });\n  }\n\n  submitLocation() {\n\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/genres\", {\n      method: 'GET' // The type of HTTP request.\n    })\n      .then(res => res.json()) // Convert the response data to a JSON.\n      .then(genreList => {\n        if (!genreList) return;\n        // Map each genreObj in genreList to an HTML element:\n        // A button which triggers the showMovies function for each genre.\n        let genreDivs = genreList.map((genreObj, i) =>\n          <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n        );\n\n        // Set the state of the genres list to the value returned by the HTTP response from the server.\n        this.setState({\n          genres: genreDivs\n        })\n      })\n      .catch(err => console.log(err))\t// Print the error if there is one.\n  }\n\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showMovies(genre) {\n        // Send an HTTP request to the server.\n    fetch(`http://localhost:8081/genres/${genre}`, {\n      method: 'GET' // The type of HTTP request.\n    })\n      .then(res => res.json()) // Convert the response data to a JSON.\n      .then(movieList => {\n        if (!movieList) return;\n        let movieDivs = movieList.map((movieObj, i) =>\n          <DashboardMovieRow title={movieObj.title} rating={movieObj.rating} voteCount={movieObj.vote_count}/>\n        );\n        this.setState({\n          movies: movieDivs\n        })\n      })\n      .catch(err => console.log(err))\t// Print the error if there is one.\n\n  }\n\n  render() {    \n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n          <div className=\"h5\">Trip Planner</div>\n           <div className=\"location-input\">\n             <input type=\"text\" placeholder=\"Enter a location\" value={this.state.locationName} onChange={this.handleLocationNameChange} id=\"location-input\" className=\"location-input\"/>\n             <button type=\"button\" class=\"btn btn-primary\">Search</button>\n           </div>\n          </div>\n\n          <br></br>\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header-lg\"><strong>Title</strong></div>\n                <div className=\"header\"><strong>Rating</strong></div>\n                <div className=\"header\"><strong>Vote Count</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.movies}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}