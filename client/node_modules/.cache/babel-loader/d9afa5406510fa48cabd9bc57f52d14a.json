{"ast":null,"code":"var _jsxFileName = \"/Users/anushrutshah/Documents/UPenn/Fall 2020/CIS550/Project/450-FinalProj/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      locationName: \"\",\n      distance: 0.5,\n      locations: [],\n      interests: [],\n      favorites: []\n    };\n    this.handleLocationNameChange = this.handleLocationNameChange.bind(this);\n    this.submitLocation = this.submitLocation.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleLocationNameChange(e) {\n    this.setState({\n      locationName: e.target.value\n    });\n  }\n\n  handleLocationClick(location) {\n    console.log(location);\n  }\n\n  submitLocation() {\n    const params = new URLSearchParams({\n      street: this.state.locationName,\n      city: 'Manhattan',\n      county: 'New York',\n      state: 'New York',\n      country: 'United States of America',\n      format: 'json'\n    });\n    fetch(`https://nominatim.openstreetmap.org/search?${params.toString()}`, {\n      method: 'GET'\n    }).then(res => res.json()).then(locationList => {\n      if (!locationList) return;\n      let addresses = locationList.map((locationObj, i) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DashboardMovieRow, {\n        name: locationObj.display_name,\n        lat: locationObj.lat,\n        lon: locationObj.lon,\n        dist: this.state.distance,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-info\",\n        onClick: () => this.submitPOIS(locationObj.lat, locationObj.lon, this.state.distance),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, \"Select\")));\n      locationList.map((location, i) => {\n        console.log(location);\n      });\n      this.setState({\n        locations: addresses\n      });\n    }).catch(err => console.log(err));\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {// // Send an HTTP request to the server.\n    // fetch(\"http://localhost:8081/genres\", {\n    //   method: 'GET' // The type of HTTP request.\n    // })\n    //   .then(res => res.json()) // Convert the response data to a JSON.\n    //   .then(genreList => {\n    //     if (!genreList) return;\n    //     // Map each genreObj in genreList to an HTML element:\n    //     // A button which triggers the showMovies function for each genre.\n    //     let genreDivs = genreList.map((genreObj, i) =>\n    //       <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n    //     );\n    //     // Set the state of the genres list to the value returned by the HTTP response from the server.\n    //     this.setState({\n    //       genres: genreDivs\n    //     })\n    //   })\n    //   .catch(err => console.log(err))\t// Print the error if there is one.\n    // var slider = document.getElementById(\"myRange\");\n    // var output = document.getElementById(\"demo\");\n    // output.innerHTML = slider.value; // Display the default slider value\n    // // Update the current slider value (each time you drag the slider handle)\n    // slider.oninput = function() {\n    //   output.innerHTML = this.value;\n    //   console.log(slider.value);\n    // }\n  }\n\n  handleChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      distance: event.target.value\n    });\n  }\n\n  submitPOIS(lat, lon, distance) {\n    console.log(\"DISTANCE: \" + distance);\n    fetch(`http://localhost:8081/pois/${lat}/${lon}/${distance}`, {\n      method: 'GET'\n    }).then(res => res.json()).then(POIList => {\n      if (!POIList) return;\n      let pois = POIList.map((poiObj, i) => {});\n      this.setState({\n        interests: pois\n      });\n    });\n  }\n\n  submitLocation(lat, lon) {\n    fetch(`http://localhost:8081/zones/${lat}/${lon}`, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()).then(zoneList => {\n      if (!zoneList) return;\n      console.log(zoneList);\n    });\n  }\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  // showMovies(genre) {\n  //       // Send an HTTP request to the server.\n  //   fetch(`http://localhost:8081/genres/${genre}`, {\n  //     method: 'GET' // The type of HTTP request.\n  //   })\n  //     .then(res => res.json()) // Convert the response data to a JSON.\n  //     .then(movieList => {\n  //       if (!movieList) return;\n  //       let movieDivs = movieList.map((movieObj, i) =>\n  //         <DashboardMovieRow title={movieObj.title} rating={movieObj.rating} voteCount={movieObj.vote_count}/>\n  //       );\n  //       this.setState({\n  //         movies: movieDivs\n  //       })\n  //     })\n  //     .catch(err => console.log(err))\t// Print the error if there is one.\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, \"Trip Planner\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location-input\",\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a location\",\n      value: this.state.locationName,\n      onChange: this.handleLocationNameChange,\n      id: \"location-input\",\n      className: \"location-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"horizontalgap\",\n      style: {\n        width: '10px',\n        marginLeft: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-primary\",\n      onClick: this.submitLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 14\n      }\n    }, \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"d-flex justify-content-center my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"slidecontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      min: \"0.1\",\n      max: \"1\",\n      value: this.state.distance,\n      step: \"0.1\",\n      class: \"slider\",\n      id: \"myRange\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, \"Distance: \", this.state.distance, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      id: \"demo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 52\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 46\n      }\n    }, this.state.locations.length == 0 ? \"\" : \"Name\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, this.state.locations)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 44\n      }\n    }, \"POIs\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/anushrutshah/Documents/UPenn/Fall 2020/CIS550/Project/450-FinalProj/client/src/components/Dashboard.js"],"names":["React","PageNavbar","GenreButton","DashboardMovieRow","Dashboard","Component","constructor","props","state","locationName","distance","locations","interests","favorites","handleLocationNameChange","bind","submitLocation","handleChange","e","setState","target","value","handleLocationClick","location","console","log","params","URLSearchParams","street","city","county","country","format","fetch","toString","method","then","res","json","locationList","addresses","map","locationObj","i","display_name","lat","lon","submitPOIS","catch","err","componentDidMount","event","POIList","pois","poiObj","zoneList","render","flexDirection","width","marginLeft","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport GenreButton from './GenreButton';\nimport DashboardMovieRow from './DashboardMovieRow';\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      locationName: \"\",\n      distance: 0.5,\n      locations: [],\n      interests: [],\n      favorites: []\n    }\n\n    this.handleLocationNameChange = this.handleLocationNameChange.bind(this);\n    this.submitLocation = this.submitLocation.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    \n  }\n\n  handleLocationNameChange(e) {\n    this.setState({\n      locationName: e.target.value\n    });\n  }\n\n  handleLocationClick(location) {\n    console.log(location);\n  }\n\n  submitLocation() {\n    const params = new URLSearchParams({\n      street: this.state.locationName,\n      city: 'Manhattan',\n      county: 'New York',\n      state: 'New York',\n      country: 'United States of America',\n      format: 'json'\n    })\n  \n\n    fetch(`https://nominatim.openstreetmap.org/search?${params.toString()}`, {\n      method: 'GET'\n    })\n    .then(res => res.json())\n    .then(locationList => {\n      if (!locationList) return;\n      let addresses = locationList.map((locationObj, i) => \n      <>\n        <DashboardMovieRow name={locationObj.display_name} lat={locationObj.lat} lon={locationObj.lon} dist={this.state.distance}/>\n        <button type=\"button\" class=\"btn btn-info\" onClick={() => this.submitPOIS(locationObj.lat, locationObj.lon, this.state.distance)}>Select</button>\n      </>\n        );\n      locationList.map((location, i) => {\n        console.log(location);\n      } )\n      this.setState({\n        locations: addresses\n      })\n    })\n    .catch(err => console.log(err))\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // // Send an HTTP request to the server.\n    // fetch(\"http://localhost:8081/genres\", {\n    //   method: 'GET' // The type of HTTP request.\n    // })\n    //   .then(res => res.json()) // Convert the response data to a JSON.\n    //   .then(genreList => {\n    //     if (!genreList) return;\n    //     // Map each genreObj in genreList to an HTML element:\n    //     // A button which triggers the showMovies function for each genre.\n    //     let genreDivs = genreList.map((genreObj, i) =>\n    //       <GenreButton id={\"button-\" + genreObj.genre} onClick={() => this.showMovies(genreObj.genre)} genre={genreObj.genre} />\n    //     );\n\n    //     // Set the state of the genres list to the value returned by the HTTP response from the server.\n    //     this.setState({\n    //       genres: genreDivs\n    //     })\n    //   })\n    //   .catch(err => console.log(err))\t// Print the error if there is one.\n    // var slider = document.getElementById(\"myRange\");\n    // var output = document.getElementById(\"demo\");\n    // output.innerHTML = slider.value; // Display the default slider value\n    // // Update the current slider value (each time you drag the slider handle)\n    // slider.oninput = function() {\n    //   output.innerHTML = this.value;\n    //   console.log(slider.value);\n    // }\n  }\n\n  handleChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      distance: event.target.value\n    })\n  }\n\n  submitPOIS(lat, lon, distance) {\n\t\tconsole.log(\"DISTANCE: \" + distance)\n\t\tfetch(`http://localhost:8081/pois/${lat}/${lon}/${distance}`, {\n\t\t\tmethod: 'GET'\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(POIList => {\n\t\t\tif(!POIList) return;\n\t\t\tlet pois = POIList.map((poiObj, i) => {\n      });\n      this.setState({\n        interests: pois\n      });\n\t\t})\n  }\n  \n  submitLocation(lat, lon) {\n    fetch(`http://localhost:8081/zones/${lat}/${lon}`, {\n      method: 'GET' // The type of HTTP request.\n    })\n    .then(res => res.json())\n    .then(zoneList => {\n      if(!zoneList) return;\n      console.log(zoneList);\n    })\n    }\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  // showMovies(genre) {\n  //       // Send an HTTP request to the server.\n  //   fetch(`http://localhost:8081/genres/${genre}`, {\n  //     method: 'GET' // The type of HTTP request.\n  //   })\n  //     .then(res => res.json()) // Convert the response data to a JSON.\n  //     .then(movieList => {\n  //       if (!movieList) return;\n  //       let movieDivs = movieList.map((movieObj, i) =>\n  //         <DashboardMovieRow title={movieObj.title} rating={movieObj.rating} voteCount={movieObj.vote_count}/>\n  //       );\n  //       this.setState({\n  //         movies: movieDivs\n  //       })\n  //     })\n  //     .catch(err => console.log(err))\t// Print the error if there is one.\n\n  // }\n\n  render() {  \n    return (\n      <div className=\"Dashboard\">\n\n        <PageNavbar active=\"dashboard\" />\n\n        <br></br>\n        <div className=\"container movies-container\">\n          <div className=\"jumbotron\">\n          <div className=\"h5\">Trip Planner</div>\n           <div className=\"location-input\" style={{flexDirection: \"row\"}}>\n             <input type=\"text\" placeholder=\"Enter a location\" value={this.state.locationName} \n             onChange={this.handleLocationNameChange} id=\"location-input\" className=\"location-input\"/>\n             <span class=\"horizontalgap\" style={{width: '10px', marginLeft: '20px' }}>\n             <button type=\"button\" class=\"btn btn-primary\" onClick={this.submitLocation}>Search</button>\n             </span>\n           </div>\n           <div class=\"d-flex justify-content-center my-4\">\n            </div>\n            <div class=\"slidecontainer\">\n                <input type=\"range\" min=\"0.1\" max=\"1\" value={this.state.distance} step=\"0.1\" class=\"slider\" id=\"myRange\" onChange={this.handleChange} />\n                <p>Distance: {this.state.distance} <span id=\"demo\"></span></p>\n              </div>\n              <div className=\"jumbotron\">\n              <div className=\"movies-container\">\n                <div className=\"movies-header\">\n                  <div className=\"header-lg\"><strong>{ this.state.locations.length == 0 ? \"\"  : \"Name\"}</strong></div>\n                </div>\n                <div className=\"results-container\" id=\"results\">\n                  {this.state.locations}\n                </div>\n              </div>\n              </div>\n          </div>\n          <br></br>\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header-lg\"><strong>POIs</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}